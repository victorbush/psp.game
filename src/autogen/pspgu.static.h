/*=========================================================
This file is automatically generated. Do not edit manually.
=========================================================*/

/** Allocates a buffer. */
static void* alloc_vram_buffer(_pspgu_t* ctx, uint32_t width, uint32_t height, uint32_t pixel_format_psm)
;

/** Computes the size of video memory for a certain number of pixels given their pixel format. */
static uint32_t calc_mem_size(uint32_t width, uint32_t height, uint32_t pixel_format_psm)
;

static void pspgu__construct(gpu_t* gpu)
;

static void pspgu__destruct(gpu_t* gpu)
;

static void pspgu__wait_idle(gpu_t* gpu)
;

static void pspgu_anim_model__construct(gpu_anim_model_t* model, gpu_t* gpu)
;

static void pspgu_anim_model__destruct(gpu_anim_model_t* model, gpu_t* gpu)
;

static void pspgu_anim_model__render(gpu_anim_model_t* model, gpu_t* gpu, gpu_frame_t* frame, ecs_transform_t* transform)
;

static void pspgu_frame__construct(gpu_frame_t* frame, gpu_t* gpu)
;

static void pspgu_frame__destruct(gpu_frame_t* frame, gpu_t* gpu)
;

static void pspgu_material__construct(gpu_material_t* material, gpu_t* gpu)
;

static void pspgu_material__destruct(gpu_material_t* material, gpu_t* gpu)
;

static void pspgu_plane__construct(gpu_plane_t* plane, gpu_t* gpu)
;

static void pspgu_plane__destruct(gpu_plane_t* plane, gpu_t* gpu)
;

static void pspgu_plane__render(gpu_plane_t* plane, gpu_t* gpu, gpu_window_t* window, gpu_frame_t* frame, gpu_material_t* material)
;

static void pspgu_plane__update_verts(gpu_plane_t* plane, gpu_t* gpu, kk_vec3_t verts[4])
;

static void pspgu_static_model__construct(gpu_static_model_t* model, gpu_t* gpu, const tinyobj_t* obj)
;

static void pspgu_static_model__destruct(gpu_static_model_t* model, gpu_t* gpu)
;

static void pspgu_static_model__render(gpu_static_model_t* model, gpu_t* gpu, gpu_window_t* window, gpu_frame_t* frame, gpu_material_t* material, ecs_transform_t* transform)
;

static void pspgu_texture__construct(gpu_texture_t* texture, gpu_t* gpu, void* img, int width, int height)
;

static void pspgu_texture__destruct(gpu_texture_t* texture, gpu_t* gpu)
;
